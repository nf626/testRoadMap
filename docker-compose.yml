# ReMap Development Environment
# This file defines all the services needed for local development
version: '3.8'

services:
  # PostgreSQL Database (using Supabase-compatible setup)
  database:
    image: postgres:15-alpine
    container_name: remap_db
    restart: unless-stopped
    environment:
      # These values come from your .env file
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      # Persist database data between container restarts
      - postgres_data:/var/lib/postgresql/data
      # Initialize database with any setup scripts
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - remap_network

  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: remap_backend
    restart: unless-stopped
    environment:
      # Environment variables for the backend
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@database:5432/${DB_NAME}
      JWT_SECRET: ${JWT_SECRET}
      # Add any other environment variables your backend needs
    ports:
      - "3000:3000"
    volumes:
      # Mount the backend code for hot reloading during development
      - ./backend:/app
      - /app/node_modules  # Prevent node_modules from being overwritten
    depends_on:
      - database
    networks:
      - remap_network
    # Automatically restart if the process crashes
    command: npm run dev

  # Frontend React Native Metro Bundler
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: remap_frontend
    restart: unless-stopped
    environment:
      # React Native and Metro bundler configuration
      NODE_ENV: development
      EXPO_DEVTOOLS_LISTEN_ADDRESS: 0.0.0.0
      REACT_NATIVE_PACKAGER_HOSTNAME: 0.0.0.0
    ports:
      # Metro bundler port
      - "8081:8081"
      # Expo development server (if using Expo)
      - "19000:19000"
      - "19001:19001"
      - "19002:19002"
    volumes:
      # Mount frontend code for hot reloading
      - ./frontend:/app
      - /app/node_modules
    networks:
      - remap_network
    command: npm start

  # Optional: Adminer for database management (web-based PostgreSQL client)
  adminer:
    image: adminer:latest
    container_name: remap_adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - remap_network
    depends_on:
      - database

# Define named volumes for data persistence
volumes:
  postgres_data:
    driver: local

# Create a custom network for service communication
networks:
  remap_network:
    driver: bridge