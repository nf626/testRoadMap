# Use Node.js 18 LTS as the base image (stable and well-supported)
FROM node:latest-alpine

# Set the working directory inside the container
WORKDIR /app

# Copy package.json and package-lock.json first
# This allows Docker to cache the npm install step if dependencies haven't changed
COPY package*.json ./

# Install dependencies
# Using npm ci for faster, reliable, reproducible builds in production-like environments
RUN npm ci --only=production=false

# Copy the rest of the application code
COPY . .

# Create a non-root user for security (good practice)
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nextjs -u 1001

# Change ownership of the app directory to the nodejs user
USER nodejs

# Expose the port the app runs on
EXPOSE 3000

# Command to start the development server
# Using npm run dev assumes you have a dev script in package.json that uses nodemon or similar
CMD ["npm", "run", "dev"]